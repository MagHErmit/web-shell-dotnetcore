@model IEnumerable<web_shell_dotnetcore.Models.PowerShellCM>

@{
    ViewData["Title"] = "Index";
}
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script>
    var array;
    var count = 0;
    $(function () {
        array = @Html.Raw(Json.Serialize(@ViewBag.history));
        //console.log(array);

        function moveOnHistory(counter) {
            
            count += counter;
            if (count > -1) {
                count = 0;
                return "";
            } else if (-count > array.length) {
                count -= counter;
            }
            
            return array[array.length + count];
        }

        function executeCmd() {
            if ($("#cmd").val() == "") return;
            $("#cmd").prop("disabled", true);
            array.push($("#cmd").val());
            count = 0;
            $.ajax({

                type: 'POST',
                url: 'PowerShellCMs/Cmd',
                contentType: 'application/x-www-form-urlencoded',
                data: { cmd: $("#cmd").val() },
                beforeSend: function (xhr) {

                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                success: function (json) {
                    console.log(json);
                    $("#exev").text(json);
                    $("#cmd").val('');
                    $("#cmd").prop("disabled", false);
                    $("#cmd").focus();
                },

            })
            
            
        }

        $("#submitCommand").click(function () {
            executeCmd();
        })

        $("#cmd").keydown(function (e) {
            switch (e.which) {

                case 13:
                    executeCmd();
                    break;
                case 38:
                    $("#cmd").val(moveOnHistory(-1));
                    break;
                case 40:
                    $("#cmd").val(moveOnHistory(1));
                    break;

            }
        });


    });
</script>

<h1>Terminal's output</h1>
<div class="container p-3 my-3 bg-primary rounded">

    <pre>
        <code id="exev" class="text-white">
            Output will be here
        </code>
    </pre>

</div>
<p>Enter your command:</p>
<span style="display: inline-flex !important;">
    @Html.AntiForgeryToken()
    <input id="cmd" class="form-control" type="text" />
    <button id="submitCommand" class="btn btn-primary">Send</button>
</span>